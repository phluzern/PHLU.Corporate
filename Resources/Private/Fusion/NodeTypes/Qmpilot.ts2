# Files
prototype(Phlu.Qmpilot.NodeTypes:Files) {

    templatePath = 'resource://Phlu.Corporate/Private/Templates/NodeTypes/Files/Default.html'
    assets = ${q(node).property('assets')}
    attributes.class = ${q(node).property('assets') ? 'assetsCount-' + Array.length(q(node).property('assets')) : 'assetsCount-0'}

}


# File
prototype(Phlu.Qmpilot.NodeTypes:File) < prototype(Phlu.Corporate:Content) {


    templatePath = 'resource://Phlu.Corporate/Private/Templates/NodeTypes/File/Default.html'
    asset = ${q(node).property('asset')}
    customTitle = ${q(node).property('customTitle')}
    title = ${q(node).property('title')}

    linkRaw = ${q(node).property('asset').resource.link}
    linkRaw.@process.convertUris = Neos.Neos:ConvertUris {
        forceConversion = true
    }

    uriBuilder = Neos.Fusion:UriBuilder {

    }

    link = ${Phlu.Corporate.getEmbeddedLink(this.node, this.linkRaw, request)}

    assetIsButton = ${q(node).property('forceAsButton') == true ? true : ( q(q(node).property('asset')).get(0).fileDescription == '' ? (q(node).parentsUntil("[instanceof Phlu.Corporate:Section]").find("[instanceof Phlu.Qmpilot.NodeTypes:File]").count() == 1) ? true : false : false)}



    assetcount = ${q(node).property('asset') ? '1' : '0'}

    attributes.class = ${(q(node).next().get(0).nodeType.name != 'Phlu.Qmpilot.NodeTypes:File' ? 'last ' : '')}


}

